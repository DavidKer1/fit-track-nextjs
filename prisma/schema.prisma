generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Workout {
  id        String     @id @default(cuid())
  name      String
  date      DateTime
  finished  Boolean
  userId    String
  user      User       @relation(fields: [userId], references: [id])
  exercises Exercise[]
  Set       Set[]
}

model ExerciseCategory {
  id        String     @id @default(cuid())
  name      String
  exercises Exercise[]
}

model Exercise {
  id         String            @id @default(cuid())
  name       String
  userId     String
  user       User              @relation(fields: [userId], references: [id])
  categoryId String            @unique
  category   ExerciseCategory? @relation(fields: [categoryId], references: [id])
  Workout    Workout?          @relation(fields: [workoutId], references: [id])
  workoutId  String?
  Set        Set[]
}

model Set {
  id     String @id @default(cuid())
  name   String
  reps   Int
  weight Int

  exerciseId String
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  workoutId  String   @unique
  workout    Workout  @relation(fields: [workoutId], references: [id])
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  Accounts      Account[]
  Sessions      Session[]
  Workouts      Workout[]
  Exercise      Exercise[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
