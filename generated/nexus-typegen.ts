/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Account: { // root type
    access_token?: string | null; // String
    expires_at?: number | null; // Int
    id: string; // String!
    id_token?: string | null; // String
    oauth_token?: string | null; // String
    oauth_token_secret?: string | null; // String
    provider: string; // String!
    providerAccountId: string; // String!
    refresh_token?: string | null; // String
    scope?: string | null; // String
    session_state?: string | null; // String
    token_type?: string | null; // String
    type: string; // String!
  }
  Exercise: { // root type
    id: string; // String!
    name: string; // String!
  }
  ExerciseCategory: { // root type
    id: string; // String!
    name: string; // String!
  }
  ExerciseWorkout: { // root type
    id: string; // String!
    name: string; // String!
  }
  Mutation: {};
  Query: {};
  Session: { // root type
    expires: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    sessionToken: string; // String!
    userId: string; // String!
  }
  Set: { // root type
    id: string; // String!
    name: string; // String!
    reps: number; // Int!
    weight: number; // Int!
  }
  User: { // root type
    email?: string | null; // String
    emailVerified?: NexusGenScalars['DateTime'] | null; // DateTime
    id: string; // String!
    image?: string | null; // String
    name?: string | null; // String
  }
  Workout: { // root type
    date: NexusGenScalars['DateTime']; // DateTime!
    finished: boolean; // Boolean!
    id: string; // String!
    name: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Account: { // field return type
    access_token: string | null; // String
    expires_at: number | null; // Int
    id: string; // String!
    id_token: string | null; // String
    oauth_token: string | null; // String
    oauth_token_secret: string | null; // String
    provider: string; // String!
    providerAccountId: string; // String!
    refresh_token: string | null; // String
    scope: string | null; // String
    session_state: string | null; // String
    token_type: string | null; // String
    type: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Exercise: { // field return type
    category: NexusGenRootTypes['ExerciseCategory']; // ExerciseCategory!
    exercisesWorkout: Array<NexusGenRootTypes['ExerciseWorkout'] | null> | null; // [ExerciseWorkout]
    id: string; // String!
    name: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  ExerciseCategory: { // field return type
    exercises: Array<NexusGenRootTypes['Exercise'] | null> | null; // [Exercise]
    id: string; // String!
    name: string; // String!
  }
  ExerciseWorkout: { // field return type
    exercise: NexusGenRootTypes['Exercise']; // Exercise!
    id: string; // String!
    name: string; // String!
    sets: Array<NexusGenRootTypes['Set'] | null> | null; // [Set]
    workout: NexusGenRootTypes['Workout']; // Workout!
  }
  Mutation: { // field return type
    deleteAccount: NexusGenRootTypes['Account'] | null; // Account
  }
  Query: { // field return type
    user: NexusGenRootTypes['User'] | null; // User
  }
  Session: { // field return type
    expires: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    sessionToken: string; // String!
    user: NexusGenRootTypes['User'] | null; // User
    userId: string; // String!
  }
  Set: { // field return type
    exerciseWorkout: NexusGenRootTypes['ExerciseWorkout']; // ExerciseWorkout!
    id: string; // String!
    name: string; // String!
    reps: number; // Int!
    weight: number; // Int!
  }
  User: { // field return type
    accounts: Array<NexusGenRootTypes['Account'] | null>; // [Account]!
    email: string | null; // String
    emailVerified: NexusGenScalars['DateTime'] | null; // DateTime
    exercises: Array<NexusGenRootTypes['Exercise'] | null> | null; // [Exercise]
    id: string; // String!
    image: string | null; // String
    name: string | null; // String
    sessions: Array<NexusGenRootTypes['Session'] | null> | null; // [Session]
    workouts: Array<NexusGenRootTypes['Workout'] | null> | null; // [Workout]
  }
  Workout: { // field return type
    date: NexusGenScalars['DateTime']; // DateTime!
    exercisesWorkout: Array<NexusGenRootTypes['ExerciseWorkout'] | null> | null; // [ExerciseWorkout]
    finished: boolean; // Boolean!
    id: string; // String!
    name: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
}

export interface NexusGenFieldTypeNames {
  Account: { // field return type name
    access_token: 'String'
    expires_at: 'Int'
    id: 'String'
    id_token: 'String'
    oauth_token: 'String'
    oauth_token_secret: 'String'
    provider: 'String'
    providerAccountId: 'String'
    refresh_token: 'String'
    scope: 'String'
    session_state: 'String'
    token_type: 'String'
    type: 'String'
    user: 'User'
  }
  Exercise: { // field return type name
    category: 'ExerciseCategory'
    exercisesWorkout: 'ExerciseWorkout'
    id: 'String'
    name: 'String'
    user: 'User'
  }
  ExerciseCategory: { // field return type name
    exercises: 'Exercise'
    id: 'String'
    name: 'String'
  }
  ExerciseWorkout: { // field return type name
    exercise: 'Exercise'
    id: 'String'
    name: 'String'
    sets: 'Set'
    workout: 'Workout'
  }
  Mutation: { // field return type name
    deleteAccount: 'Account'
  }
  Query: { // field return type name
    user: 'User'
  }
  Session: { // field return type name
    expires: 'DateTime'
    id: 'String'
    sessionToken: 'String'
    user: 'User'
    userId: 'String'
  }
  Set: { // field return type name
    exerciseWorkout: 'ExerciseWorkout'
    id: 'String'
    name: 'String'
    reps: 'Int'
    weight: 'Int'
  }
  User: { // field return type name
    accounts: 'Account'
    email: 'String'
    emailVerified: 'DateTime'
    exercises: 'Exercise'
    id: 'String'
    image: 'String'
    name: 'String'
    sessions: 'Session'
    workouts: 'Workout'
  }
  Workout: { // field return type name
    date: 'DateTime'
    exercisesWorkout: 'ExerciseWorkout'
    finished: 'Boolean'
    id: 'String'
    name: 'String'
    user: 'User'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    deleteAccount: { // args
      accountId?: string | null; // String
    }
  }
  Query: {
    user: { // args
      userId: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}